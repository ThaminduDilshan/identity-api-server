openapi: 3.0.0
info:
  title: WSO2 Identity Server - Secret Manager API Definition
  description: This document specifies a **RESTful API** for **WSO2 Identity Server secret management**
  contact:
    name: WSO2
    url: http://wso2.com/products/identity-server/
    email: iam-dev@wso2.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "v1"
servers:
  - url: https://localhost:9443/t/{tenant-domain}/api/server/v1
    variables:
      tenant-domain:
        default: carbon.super
security:
  - OAuth2: []
  - BasicAuth: []
paths:
  '/secret-mgt/types/{secret-type}/secrets':
    get:
      summary: Get a list of configured secrets
      description: |
        This API provides the capability to retrieve the list of configured secrets.
      operationId: getSecretsList
      parameters:
        - name: secret-type
          in: path
          description: name of the secret type
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/offsetQueryParam'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsListObject'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a secret
      description: |
        This API provides the capability to create a secret
      operationId: createSecret
      parameters:
        - name: secret-type
          in: path
          description: name of the secret type
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secretAddRequest'
      responses:
        "201":
          description: Successful Response
          headers:
            Location:
              description: This denotes the location of the newly-created secret.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  '/secret-mgt/types/{secret-type}/secrets/{secret-id}':
    get:
      summary: Retrieve a secret by id
      description: |
        This API provides the capability to retrieve a secret
      operationId: getSecret
      parameters:
        - name: secret-type
          in: path
          description: Name of the secret type
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: secret-id
          in: path
          description: Id of the secret
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a secret by id
      description: |
        This API provides the capability to update a secret name.
      operationId: updateSecret
      parameters:
        - name: secret-type
          in: path
          description: Name of the secret type
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: secret-id
          in: path
          description: Id of the secret
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretUpdateRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Patch a secret by id
      description: >
        This API provides the capability to update a secret using patch request by using its id.
      operationId: patchSecret
      parameters:
        - name: secret-type
          in: path
          description: Name of the secret type
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: secret-id
          in: path
          description: Id of the secret
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretPatchRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a secret by id
      description: |
        This API provides the capability to delete a secret by
        id.
      operationId: deleteSecret
      parameters:
        - name: secret-type
          in: path
          description: Name of the secret type
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: secret-id
          in: path
          description: Id of the secret
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Secret Type Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    limitQueryParam:
      in: query
      name: limit
      required: false
      description: |
        Maximum number of records to return.
      schema:
        type: integer
    offsetQueryParam:
      in: query
      name: offset
      required: false
      description: |
        Number of records to skip for pagination.
      schema:
        type: integer
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          example: SECRETM-00000
        message:
          type: string
          example: Some Error Message
        description:
          type: string
          example: Some Error Description
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047

    secretAddRequest:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
          pattern: ^[a-zA-Z][^\s]{0,63}$
          example: Secret1
        value:
          type: string
          pattern: ^.{1,2048}$
          example: sample-value
        description:
          type: string
          pattern: ^.{0,1023}$
          example: Some sample description

    SecretResponse:
      required:
        - secretId
        - secretName
        - lastModified
        - created
      type: object
      properties:
        secretId:
          type: string
          example: 30103923-923c-485f-a8f9-606398
        secretName:
          type: string
          example: Secret1
        created:
          type: string
          example: "2021-09-29 10:36:24.976"
        lastModified:
          type: string
          example: "2021-09-30 11:29:54.124"
        description:
          type: string
          example: Some sample description

    SecretUpdateRequest:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          pattern: ^.{1,2048}$
          example: new-sample-value
        description:
          type: string
          pattern: ^.{0,1023}$
          example: Some sample description

    SecretPatchRequest:
      required:
        - operation
        - path
      properties:
        operation:
          type: string
          description: The operation to be performed
          enum:
            - REPLACE
          example: REPLACE
        path:
          type: string
          description: A JSON-Pointer
          example: /value
        value:
          type: string
          description: The value to be used within the operations
          example: 'dummyValue'

    SecretsListObject:
      type: object
      properties:
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/SecretResponse'

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:9443/oauth2/authorize
          tokenUrl: https://localhost:9443/oauth2/token
          scopes: {}
